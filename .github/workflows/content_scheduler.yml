# .github/workflows/content_scheduler.yml
name: Generador de Contenido Semanal

on:
  schedule:
    - cron: '0 12 * * 5' # Cada viernes a las 12:00 PM
  workflow_dispatch: # Permite la ejecución manual

jobs:
  generate-content:
    runs-on: ubuntu-latest
    permissions:
      # Se necesitan permisos de escritura para hacer commit del nuevo artículo.
      contents: write

    steps:
      - name: Checkout del Repositorio
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Instalar Dependencias de Python
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/requirements.txt

      - name: Ejecutar la App de Contenido
        id: generate
        run: |
          python scripts/automation_app.py
        env:
          GOOGLE_API_KEY: ${{ secrets.GOOGLE_API_KEY }}
          REDDIT_CLIENT_ID: ${{ secrets.REDDIT_CLIENT_ID }}
          REDDIT_CLIENT_SECRET: ${{ secrets.REDDIT_CLIENT_SECRET }}
          REDDIT_USERNAME: ${{ secrets.REDDIT_USERNAME }}
          REDDIT_PASSWORD: ${{ secrets.REDDIT_PASSWORD }}

      - name: Verificar si hay cambios
        id: git-check
        # Primero, añadimos cualquier archivo .md nuevo en la carpeta posts.
        # Luego, `git diff` puede detectar si hay cambios preparados para el commit.
        run: |
          git add posts/*.md
          echo "changes=$(if git diff --staged --quiet --exit-code; then echo "false"; else echo "true"; fi)" >> $GITHUB_OUTPUT

      - name: Commit y Push del Nuevo Artículo
        if: steps.git-check.outputs.changes == 'true'
        run: |
          git config --global user.name 'GitHub Actions Bot'
          git config --global user.email 'github-actions-bot@users.noreply.github.com'
          # Busca el archivo .md más reciente para el mensaje del commit
          LATEST_POST=$(ls -t posts/*.md | head -n 1)
          COMMIT_MESSAGE="feat(content): Add new article from bot: $(basename $LATEST_POST .md)"
          git commit -m "$COMMIT_MESSAGE"
          git push